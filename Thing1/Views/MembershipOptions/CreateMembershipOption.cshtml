@model Thing1.Models.MembershipOption

@{
    ViewBag.Title = "Create";
}
<!--View for users to create new membership options-->
<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Membership Option</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClubId, new { @Value = ViewBag.ClubId })
        <!--Drop Down for Type of Membership Option Student or SigO-->
        <div class="form-group">
            @Html.LabelFor(model => model.TypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Drop down for duration of membership option-->
        <div class="form-group">
            @Html.LabelFor(model => model.Duration, "Duration", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Duration", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Field that allows users to specify exact date that membrship option will expoire-->
        <div class="form-group">
            @Html.LabelFor(model => model.ExpDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Field allowing user to enter price for membership option-->
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
           
         </div>
        <!--Checkbox allowing user to specify that this is a free membership-->
        <div class="checkbox">
            <label><input type="checkbox" id="checkBox" value="" onclick="EnableTextbox('checkBox', 'Price')">Free membership</label>

        </div>
    
        <script language="javascript">
                    function EnableTextbox(ObjChkId, ObjTxtId) {

                        if (document.getElementById(ObjChkId).checked)
                            document.getElementById(ObjTxtId).disabled = true;
                        else
                            document.getElementById(ObjTxtId).disabled = false;
                        document.getElementById(ObjTxtId).value = 0;
                    }
        </script>
    
        <!--Open field for user to enter in anything for description of membership option-->      
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Creates Checkbox to allow user to note if membership option is still active-->
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ViewCurrentMembershipOptions", new { clubId = ViewBag.ClubId })
</div>


