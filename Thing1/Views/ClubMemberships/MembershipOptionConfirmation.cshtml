@using Microsoft.AspNet.Identity
@model Thing1.Models.ClubMembership

@{
        ViewBag.Title = "Membership Option Selection";
}

<h2>Welcome, @User.Identity.GetUserName()!</h2>
<h3>Membership options selected:</h3>
<h4>Club: @ViewBag.ClubName (@ViewBag.ClubNickName)</h4>

<!-- Insert code for showing multiple options selected? -->
<h4>Membership Period:
@{
    var periodText = "";
    if (@ViewBag.Duration == 1)
    {
        periodText += @ViewBag.Duration + " year";
    }
    else
    {
        periodText += @ViewBag.Duration + " years";
    }

    periodText += " (" + @ViewBag.JoinDate + "~" + @ViewBag.TermDate + ")";
}

@Html.Raw(periodText)
</h4>
<h4>Price (USD): @ViewBag.Price</h4>

<!-- Dropdown list for payment type -->
@Html.DropDownList("Payment Method", new List<SelectListItem>
{
    new SelectListItem{ Text="PayPal", Value = "1" }
 }) 

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        
        <!-- Documentation https://developer.paypal.com/docs/integration/direct/express-checkout/integration-jsv4/ -->
        <div class="btn btn-default">
            <div id="paypal-button"></div>

            <script src="https://www.paypalobjects.com/api/checkout.js"></script>

            <script>
                paypal.Button.render({

                    env: 'sandbox', // Specify 'sandbox' for the test environment

                    client: {
                        // Providing Client ID for each environment
                        sandbox: 'AQ3koBx5nfZ-OIzlSDcyQorJACD9SEawFJrhfP6-yk5MWqDPuPFwklsxuTBsSMqkcO8q5MD-G3xo2Zdj',
                        production: 'xxxxxxxxx'
                    },

                    payment: function () {
                        // Set up the payment here, when the buyer clicks on the button
                        var env = this.props.env;
                        var client = this.props.client;

                        return paypal.rest.payment.create(env, client, {
                            transactions: [
                                {
                                    amount: { total: @ViewBag.Price, currency: 'USD' }
                                }
                            ]
                        });
                    },

                    commit: true, // Optional: show a 'Pay Now' button in the checkout flow

                    onAuthorize: function (data, actions) {
                        // Execute the payment here, when the buyer approves the transaction
                       
                        actions.payment.get().then(function(data) {
                            //write to console for debugging
                            console.log(data);

                            // add to ClubMemberships table
                            CreateClubMembership();
                            // add to PayementHistory table
                        });
                        
                        function CreateClubMembership(){
                            //Note that boolean values are hardcoded
                            var membershipData = {UserId: '@User.Identity.GetUserId()', ClubId: '@ViewBag.ClubId',MembershipOptionId: '@ViewBag.MembershipOptionId', RoleId: '1', TermDate: '@ViewBag.TermDate', JoinDate: '@ViewBag.JoinDate', Description: '@ViewBag.Description', HasAccessToFinance: 'False', CanEditClubDate: 'False', Violation: 'False'};
                            $.ajax({
                                type: 'POST',
                                data: membershipData,           
                                url: "@Url.Content("/ClubMemberships/Create/")",    
                                success: alert('Success'),
                                error: alert('Error')
                                /*success:function(result)
                                    {
                                    // what is done on success
                                    window.location.href = "/ClubMemberships";
                                    }*/
                                });
                        }

                        return actions.payment.execute().then(function () {
                            // Redirect to ClubMembership page
                            
                            setTimeout(function() {
                                window.location.href = "/ClubMemberships";
                            }, 3000);
                            //window.location.href = "/ClubMemberships";
                        });
                    }

                }, '#paypal-button');
            </script>
        </div>

         @Html.ActionLink("Cancel", "Index", "Clubs", null, new { @class = "btn btn-default" })
    </div>

</div>






 