@model Thing1.Models.Event

@{
    ViewBag.Title = "Create New Event";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="create-form">
            <h4>Create a new event - Enter details below</h4>
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Title</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Start Date</label>
                <div class="col-md-3">
                    <input class="form-control" type="date" name="startDate" />
                    @Html.ValidationMessageFor(model => model.StartsAt, "", new { @class = "text-danger" })
                </div>
                <label class="control-label col-md-1">Time</label>
                <div class="col-md-2">
                    <input class="form-control" type="time" name="startTime" />
                    @Html.ValidationMessageFor(model => model.StartsAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">End Date</label>
                <div class="col-md-3">
                    <input class="form-control" type="date" name="endDate"  />
                    @Html.ValidationMessageFor(model => model.EndsAt, "", new { @class = "text-danger" })
                </div>
                <label class="control-label col-md-1">Time</label>
                <div class="col-md-2">
                    <input class="form-control" type="time" name="endTime" />
                    @Html.ValidationMessageFor(model => model.EndsAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Location</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Description</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Target Audience</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TargetAudience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TargetAudience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Open to non-members</label>
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.IsPublic)
                    @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Capacity</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Catered Food</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Food, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Food, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Contact Info</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Price</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Other Sponsoring Clubs</label>
                <div class="col-md-offset-2 col-md-10">
                    <input type="hidden" name="primaryClubID" value="@ViewBag.PrimaryClubID"/>
                    <table>
                        <tr>
                            @{
                                int cnt = 0;
                                List<Thing1.Models.ViewModels.SponsoringClubData> clubs = ViewBag.Clubs;

                                foreach (var club in clubs)
                                {
                                    if (cnt++ % 10 == 0)
                                    {
                                        @:</tr><tr>
                                    }
                                    if (club.ClubID != ViewBag.PrimaryClubID)
                                    {
                                        @:<td>
                                            <input type="checkbox" id="@club.ClubID" name="sponsoringClubs" value="@club.ClubID" @(Html.Raw(club.Sponsoring ? "checked=\"checked\"" : "")) />
                                            <label for="clubID">@club.Name</label>
                                        @:</td>
                                    }

                                }
                                 @:</tr>
                              }
                    </table>
                </div>
            </div>
    
            @* drop down list - issue with passing multiple clubs
            <div class="form-group">
                <label class="control-label col-md-2">Sponsoring Clubs</label>
                <div class="col-md-10">
                    <input type="hidden" name="primaryClubID" value="@ViewBag.PrimaryClubID" />
                    <select multiple>
                        @{
                            List<Thing1.Models.ViewModels.SponsoringClubData> clubs = ViewBag.Clubs;
                            foreach (var club in clubs)
                            {
                                if (club.ClubID != ViewBag.PrimaryClubID)
                                {
                                    <option id="@club.ClubID" name="sponsoringClubs" value="@club.ClubID">
                                        @club.Name
                                    </option>
                                    }
                            }
                        }
                    </select>
                </div>
            </div>
            *@
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back to Club", "Details", "Clubs", new { id = ViewBag.PrimaryClubId}, null)
    </div>
</body>
</html>
