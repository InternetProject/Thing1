@model Thing1.Models.Event

@{
    ViewBag.Title = "All ASA Events";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-offset-2 col-md-8">
            <h2><span class="label label-default">Create New Event for @ViewBag.PrimaryClubName</span></h2>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Event Name</span>
                <input type="text" class="form-control" name="Title" id="name" placeholder="">
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Event Start Time</span>
                <input type="text" class="form-control" name="StartsAt" placeholder="" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.StartsAt, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Event End Time</span>
                <input type="text" class="form-control" name="EndsAt" placeholder="" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.EndsAt, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Event Location</span>
                <input type="text" class="form-control" name="Location" placeholder="" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Event Description</span>
                <input type="text" class="form-control" name="Description" placeholder="" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Target Audience</span>
                <input type="text" class="form-control" name="TargetAudience" placeholder="" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.TargetAudience, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Food Catered From</span>
                <input type="text" class="form-control" name="Location" placeholder="N/A" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.Food, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Event Ticket Price</span>
                <input type="text" class="form-control" name="Price" placeholder="0" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Primary Contact</span>
                <input type="text" class="form-control" name="Contact" placeholder="Jane Smith, jane.smith.2017@anderson.ucla.edu" aria-describedby="basic-addon1">
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-2 col-md-4">
            <h3><span class="label label-default">Event is Open to the Public</span></h3>
            <div class="input-group">
                <input type="checkbox" name="IsPublic" id="public">
                @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <h3><span class="label label-default">Sponsoring Clubs</span></h3>
            <div class="input-group">
                @{
                    List<Thing1.Models.ViewModels.SponsoringClubData> clubs = ViewBag.Clubs;

                    foreach (var club in clubs)
                    {
                        <input type="checkbox" id="@club.ClubID" name="sponsoringClubs" value="@club.ClubID" @(Html.Raw(club.Sponsoring ? "checked=\"checked\"" : "")) />
                        <label for="clubID">@club.Name</label>
                    }
                }
            </div>
        </div>
    </div>
    @*<div class="row">
        <div class="col-md-offset-3 col-md-6">
            <h3><span class="label label-default">Sponsoring Clubs</span></h3>
        </div>
    </div>
    <div class="row">
        <div class="input-group col-md-offset-2 col-md-8">
                    @{
                        List<Thing1.Models.ViewModels.SponsoringClubData> clubs = ViewBag.Clubs;

                        foreach (var club in clubs)
                        { 
                            <input type="checkbox" id="@club.ClubID" name="sponsoringClubs" value="@club.ClubID" @(Html.Raw(club.Sponsoring ? "checked=\"checked\"" : "")) />
                            <label for="clubID">@club.Name</label>
                        }
                    }
         </div>
    </div>*@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div class="row center-block">
    @Html.ActionLink("Back to List", "Index")
</div>


        @*<div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartsAt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartsAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartsAt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndsAt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndsAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndsAt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TargetAudience, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TargetAudience, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TargetAudience, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsPublic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Food, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Food, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Food, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <table>
                            <tr>
                                @{
                                    int cnt = 0;
                                    List<Thing1.Models.ViewModels.SponsoringClubData> clubs = ViewBag.Clubs;

                                    foreach (var club in clubs)
                                    {
                                        if (cnt++ % 10 == 0)
                                        {
                                            @:</tr><tr>
                                        }
                                        @:<td>
                                            <input type="checkbox" id="@club.ClubID" name="sponsoringClubs" value="@club.ClubID" @(Html.Raw(club.Sponsoring ? "checked=\"checked\"" : "")) />
                                            <label for="clubID">@club.Name</label>
                                        @:</td>
                                        }
                                        @:</tr>
                                    }
                        </table>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>*@
                                    
