@model Thing1.Models.ViewModels.EventsViewModel
@using PagedList.Mvc;
@using System.Collections.Generic;
@{
    ViewBag.Title = "Upcoming ASA Events";
}

@using (Html.BeginForm("Index", "Events", FormMethod.Get))
{
    <p>
        Find by keyword: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-primary" href=@Url.Action("Calendar") role="button">Calendar View</a>
        <br />
        Filter by:
        <br />
        @using (Html.BeginForm("Index", "Events", FormMethod.Get))
        {
            <select class="form-control" name="clubID">
                @foreach (var club in Model.clubs)
                {
                    <option value="@club.Id" 
                            @if (ViewBag.currentClub == club.Id)
                            { 
                                @:selected="selected" 
                            }
                    >@Html.DisplayFor(modelItem => club.nickname)</option>
                }
            </select>
            <input type="submit" value="Filter" />
        }

    </div>
    <div class="col-md-8">
        @foreach (var item in Model.events)
        {

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">@Html.DisplayFor(modelItem => item.Title)</h3>
                </div>
                <div class="panel-body">
                    <dl class="list-unstyled">
                        <dt>Date: @item.StartsAt.ToString("D")</dt>
                        <dt>Time: @item.StartsAt.ToString("t") to @item.EndsAt.ToString("t")</dt>
                        <dt>Location: @Html.DisplayFor(modelItem => item.Location)</dt>
                        <dt>Description: @Html.DisplayFor(modelItem => item.Description)</dt>
                        <dt>Primary Club: @Html.DisplayFor(modelItem => item.Club.nickname)</dt>
                        <dt>
                            Open to:
                            @if (item.IsPublic)
                            {
                                @:Everyone
                            }
                            else
                            {
                                @:Members of:
                                foreach (var club in item.Clubs)
                                {
                                    @Html.DisplayFor(modelItem => club.nickname) <text> </text>
                                }
                            }
                        </dt>
                    </dl>
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |

                    <!--RSVP Link below-->
                    @Html.ActionLink("RSVP", "Create", "EventsRSVPs", new { eventId = item.Id }, null)

                </div>
            </div>
        }
    </div>
</div>

<br />
<div class="text-center">
    Page @(Model.events.PageCount < Model.events.PageNumber ? 0 : Model.events.PageNumber) of @Model.events.PageCount
    @Html.PagedListPager(Model.events, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>



