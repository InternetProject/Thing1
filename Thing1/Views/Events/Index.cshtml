@model Thing1.Models.ViewModels.EventsViewModel
@using PagedList.Mvc;
@using System.Collections.Generic;
@{
    ViewBag.Title = "Upcoming ASA Events";
}

@using (Html.BeginForm("Index", "Events", FormMethod.Get))
{
    <p>
        Find by keyword: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-primary" href=@Url.Action("Calendar") role="button">Calendar View</a>
        <br />
        Filter by:
        <br />
        @using (Html.BeginForm("Index", "Events", FormMethod.Get))
        {
            <select class="form-control" name="clubID">
                @foreach (var club in Model.clubs)
                {
                    <option value="@club.Id"
                            @if (ViewBag.currentClub == club.Id) { @: selected="selected"
                                                        }>
                        @Html.DisplayFor(modelItem => club.nickname)
                                                    </option>
                }
            </select>
            <input type="submit" value="Filter" />
        }

    </div>
    <div class="col-md-8">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#all">All Events</a></li>
            <li><a data-toggle="tab" href="#professional">My Club Events</a></li>
            <li><a data-toggle="tab" href="#identity">My Upcoming Events</a></li>
        </ul>

        <div class="tab-content">
            <div id="all" class="tab-pane active">
                <dl class="events-ul">
                    @foreach (var item in Model.events)
                    {
                        <dd class="events-li">
                            <img src="~/Content/Images/@item.Club.nickname-LOGO.png" style="height:auto; width:150px" />

                            <a class="clubs-h3" href=@Url.Action("Details", new { id = item.Id})>
                                @Html.DisplayFor(modelItem => item.Title)
                            </a>
                            <p>
                                <dl class="list-unstyled">
                                    <dd>Date: @item.StartsAt.ToString("D")</dd>
                                    <dd>Time: @item.StartsAt.ToString("t") to @item.EndsAt.ToString("t")</dd>
                                    <dd>Location: @Html.DisplayFor(modelItem => item.Location)</dd>
                                    <dd>Description: @Html.DisplayFor(modelItem => item.Description)</dd>
                                    <dd>Primary Club: @Html.DisplayFor(modelItem => item.Club.nickname)</dd>
                                    <dd>
                                        Open to:
                                        @if (item.IsPublic)
                                        {
                                            @:Everyone
                                        }
                                        else
                                        {
                                            @:Members of:
                                            foreach (var club in item.Clubs)
                                            {
                                                @Html.DisplayFor(modelItem => club.nickname) <text> </text>
                                            }
                                        }
                                    </dd>
                                </dl>
                                @*@Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @if (ViewBag.MyClubs.Contains(item.Club.Id) || item.IsPublic)
                                {
                                    @Html.ActionLink("RSVP", "Create", "EventsRSVPs", new { eventId = item.Id }, null)
                                }*@
                            </p>
                        </dd>
                    }
                </dl>

            </div>

        </div>
    </div>
</div>

<br />
<div class="text-center">
    Page @(Model.events.PageCount < Model.events.PageNumber ? 0 : Model.events.PageNumber) of @Model.events.PageCount
    @Html.PagedListPager(Model.events, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>



